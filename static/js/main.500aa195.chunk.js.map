{"version":3,"sources":["Algorithms/BubbleSort.js","Visuals/bubble.js","Algorithms/SelectSort.js","Visuals/selection.js","Algorithms/InsertSort.js","Visuals/insertion.js","App.js","index.js"],"names":["swap","arr","i","j","temp","getBubbleSort","array","animations","auxArray","N","length","push","bubbleSort","max","speed","toggle","arrayBars","document","getElementsByClassName","color","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","barIndex","value","barStyle","newHeight","window","innerHeight","height","TIME","getSelectSort","min_idx","selectSort","value1","value2","newHeight1","newHeight2","getInsertSort","key","insertSort","App","useState","setArr","range","setRange","setSpeed","disable","setDisable","useEffect","sample","sort","Math","random","reduce","a","b","input","className","disabled","type","min","onChange","target","onClick","transform","width","map","idx","innerWidth","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.500aa195.chunk.js","sourcesContent":["const getBubbleSort = (array) =>{\r\n  let animations = []\r\n  let auxArray = [...array]\r\n  const N = auxArray.length\r\n  for (let i = 0; i < N - 1; i++) {\r\n    for (let j = 0; j < N - i -1; j++) {\r\n      animations.push([j, j + 1])\r\n      animations.push([auxArray[j], auxArray[j + 1]])\r\n      if (auxArray[j] > auxArray[j + 1]) {\r\n          animations.push([j, auxArray[j + 1]])\r\n          animations.push([j + 1, auxArray[j]])\r\n          swap(auxArray, j, j + 1)\r\n      }\r\n      else {\r\n          animations.push([j, -1])\r\n          animations.push([j+1, -1])\r\n      } \r\n    }\r\n  }\r\n  return [animations,auxArray]\r\n}\r\n\r\nconst swap = (arr,i,j) =>{\r\n  let temp = arr[i]\r\n  arr[i] = arr[j] \r\n  arr[j] = temp\r\n}\r\nexport default getBubbleSort","import getBubbleSort from '../Algorithms/BubbleSort'\r\n\r\n//to show winner\r\nconst FINAL_COL=\"#006687\"\r\n//to show values being compared\r\nconst COMP_COL=\"#ba008c\"\r\n//primary color\r\nconst PRIM_COL = \"#008CBA\"\r\n\r\nconst bubbleSort = (arr,max,speed,toggle) =>{ \r\n  toggle(true)\r\n  const [animations,array] = getBubbleSort(arr)\r\n  let temp = array.length-1\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const arrayBars = document.getElementsByClassName('bar')\r\n    if(i % 4 === 0) {\r\n        const color = (i % 4 === 0) ? COMP_COL : FINAL_COL\r\n        const [barOneIndex, barTwoIndex] = animations[i]\r\n        const barOneStyle = arrayBars[barOneIndex].style\r\n        const barTwoStyle = arrayBars[barTwoIndex].style\r\n        setTimeout(() => {\r\n            barOneStyle.backgroundColor = color\r\n            barTwoStyle.backgroundColor = color\r\n        },i * speed)\r\n    }else if(i % 4 === 1){\r\n      const [barOneIndex, barTwoIndex] = animations[i-1]\r\n      if(animations[i][0]>animations[i][1]){\r\n        setTimeout(() => {\r\n            arrayBars[barOneIndex].style.backgroundColor=FINAL_COL\r\n        },i * speed)\r\n      }else{\r\n        setTimeout(() => {\r\n          arrayBars[barTwoIndex].style.backgroundColor=FINAL_COL\r\n        },i * speed)\r\n      }\r\n    }\r\n    else {\r\n        const [barIndex, value] = animations[i]\r\n        const barStyle = arrayBars[barIndex].style\r\n        if(barIndex === temp){\r\n          let newHeight=(window.innerHeight-130)*value/max\r\n          temp--\r\n          setTimeout(() => {\r\n            barStyle.backgroundColor = FINAL_COL\r\n            barStyle.height = `${newHeight}px`\r\n          },i * speed)\r\n          if(temp === 0){\r\n            setTimeout(() => {\r\n              arrayBars[0].style.backgroundColor = FINAL_COL\r\n            },i * speed)\r\n          }\r\n          continue\r\n        }\r\n        if (value === -1) {\r\n          setTimeout(() => {\r\n            barStyle.backgroundColor = PRIM_COL\r\n          },i * speed)\r\n          continue\r\n        }\r\n        let newHeight=(window.innerHeight-130)*value/max\r\n        const color = (i % 2 === 0)? PRIM_COL:FINAL_COL\r\n        setTimeout(() => {\r\n            barStyle.backgroundColor = color\r\n            barStyle.height = `${newHeight}px`\r\n        },i * speed)\r\n    }\r\n  }\r\n  const TIME = speed * animations.length/2 + 1500\r\n  setTimeout(()=>toggle(false),TIME)\r\n}\r\n\r\nexport default bubbleSort","const getSelectSort = (array) => {\r\n  let animations = []\r\n  let auxArray = [...array]\r\n  const N = auxArray.length\r\n  for (let i = 0; i < N - 1; i++) {\r\n    let min_idx = i;\r\n    animations.push(['init',i])\r\n    for (let j = i + 1; j < N; j++){\r\n      animations.push(['comp',min_idx,j])\r\n      if(auxArray[j] < auxArray[min_idx]){\r\n        animations.push(['switch',min_idx,j])\r\n        min_idx = j\r\n      }else{\r\n        animations.push(['noswitch',min_idx,j])\r\n      }\r\n    }\r\n    if(min_idx !== i){\r\n      animations.push(['swap', min_idx, i, auxArray[min_idx], auxArray[i]])\r\n      swap(auxArray, min_idx, i)\r\n    }\r\n  }\r\n  return [animations,auxArray]\r\n}\r\nexport default getSelectSort\r\n\r\nconst swap = (arr,i,j) => {\r\n  let temp = arr[i]; \r\n  arr[i] = arr[j]; \r\n  arr[j] = temp; \r\n}","import getSelectSort from '../Algorithms/SelectSort'\r\n\r\n//to show winner\r\nconst FINAL_COL=\"#006687\"\r\n//to show values being compared\r\nconst COMP_COL=\"#ba008c\"\r\n//primary color\r\nconst PRIM_COL = \"#008CBA\"\r\n\r\nconst selectSort = (arr,max,speed,toggle) => {\r\n  toggle(true)\r\n  const [animations,array] = getSelectSort(arr)\r\n  const arrayBars = document.getElementsByClassName('bar')\r\n  for (let i = 0; i < animations.length; i++) {\r\n    if(animations[i][0] === 'init') {\r\n      const barIndex = animations[i][1]\r\n      const barStyle = arrayBars[barIndex].style\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = FINAL_COL\r\n      },i * speed)\r\n    }else if(animations[i][0] === 'comp') {\r\n      const barOneStyle = arrayBars[animations[i][1]].style\r\n      const barTwoStyle = arrayBars[animations[i][2]].style\r\n      setTimeout(() => {\r\n        barOneStyle.backgroundColor = COMP_COL\r\n        barTwoStyle.backgroundColor = COMP_COL\r\n      },i * speed)\r\n    }else if(animations[i][0] === 'switch') {\r\n      const barOneStyle = arrayBars[animations[i][1]].style\r\n      const barTwoStyle = arrayBars[animations[i][2]].style\r\n      setTimeout(() => {\r\n        barOneStyle.backgroundColor = PRIM_COL\r\n        barTwoStyle.backgroundColor = FINAL_COL\r\n      },i * speed)\r\n    }else if(animations[i][0] === 'noswitch') {\r\n      const barOneStyle = arrayBars[animations[i][1]].style\r\n      const barTwoStyle = arrayBars[animations[i][2]].style\r\n      setTimeout(() => {\r\n        barOneStyle.backgroundColor = FINAL_COL\r\n        barTwoStyle.backgroundColor = PRIM_COL\r\n      },i * speed)\r\n    }else if(animations[i][0] === 'swap') {\r\n      const barOneStyle = arrayBars[animations[i][1]].style\r\n      const barTwoStyle = arrayBars[animations[i][2]].style\r\n      const value1 = animations[i][3]\r\n      const value2 = animations[i][4]\r\n      let newHeight1=(window.innerHeight-130)*value1/max\r\n      let newHeight2=(window.innerHeight-130)*value2/max\r\n      setTimeout(() => {\r\n        barOneStyle.backgroundColor = PRIM_COL\r\n        barOneStyle.height = `${newHeight2}px`\r\n        barTwoStyle.backgroundColor = FINAL_COL\r\n        barTwoStyle.height = `${newHeight1}px`\r\n      },i * speed)\r\n    }\r\n  }\r\n  setTimeout(() => {\r\n    const barStyle = arrayBars[array.length-1].style\r\n    barStyle.backgroundColor = FINAL_COL\r\n  },animations.length * speed)\r\n  const TIME = speed * animations.length/2 + 1500\r\n  setTimeout(()=>toggle(false),TIME)\r\n}\r\n\r\nexport default selectSort","const getInsertSort = (array) => {\r\n  let animations = []\r\n  let auxArray = [...array]\r\n  const N = auxArray.length\r\n  for (let i = 1; i < N; ++i) { \r\n    let key = i\r\n    animations.push(['init',key])\r\n    for(let j = i - 1; j>=0; j--){\r\n      animations.push(['comp',key,j])\r\n      if(auxArray[j]>auxArray[key]){\r\n        animations.push(['swap',key,j,auxArray[key],auxArray[j]])\r\n        swap(auxArray,key,j)\r\n        key--\r\n      }else{\r\n        animations.push(['noswap',key,j])\r\n        break;\r\n      }\r\n    }\r\n  } \r\n  return [animations]\r\n}\r\n\r\nconst swap = (arr,i,j) => {\r\n  let temp = arr[i]; \r\n  arr[i] = arr[j]; \r\n  arr[j] = temp; \r\n}\r\n\r\n\r\nexport default getInsertSort ","import getInsertSort from '../Algorithms/InsertSort'\r\n\r\n//to show winner\r\nconst FINAL_COL=\"#006687\"\r\n//to show values being compared\r\nconst COMP_COL=\"#ba008c\"\r\n//primary color\r\nconst PRIM_COL = \"#008CBA\"\r\n\r\nconst insertSort = (arr,max,speed,toggle) => {\r\n  toggle(true)\r\n  const [animations] = getInsertSort(arr)\r\n  const arrayBars = document.getElementsByClassName('bar')\r\n  for(let i = 0; i < animations.length; i++){\r\n    if(animations[i][0] === 'init'){\r\n      const barIndex = animations[i][1]\r\n      const barStyle = arrayBars[barIndex].style\r\n      setTimeout(() => {\r\n        barStyle.backgroundColor = FINAL_COL\r\n      },i * speed)\r\n    }else if(animations[i][0] === 'comp'){\r\n      const barOneStyle = arrayBars[animations[i][1]].style\r\n      const barTwoStyle = arrayBars[animations[i][2]].style\r\n      setTimeout(() => {\r\n        barOneStyle.backgroundColor = COMP_COL\r\n        barTwoStyle.backgroundColor = COMP_COL\r\n      },i * speed)\r\n    }else if(animations[i][0] === 'swap') {\r\n      const barOneStyle = arrayBars[animations[i][1]].style\r\n      const barTwoStyle = arrayBars[animations[i][2]].style\r\n      const value1 = animations[i][3]\r\n      const value2 = animations[i][4]\r\n      let newHeight1=(window.innerHeight-130)*value1/max\r\n      let newHeight2=(window.innerHeight-130)*value2/max\r\n      setTimeout(() => {\r\n        barOneStyle.backgroundColor = PRIM_COL\r\n        barOneStyle.height = `${newHeight2}px`\r\n        barTwoStyle.backgroundColor = FINAL_COL\r\n        barTwoStyle.height = `${newHeight1}px`\r\n      },i * speed)\r\n      if(animations[i][2] === 0){\r\n      setTimeout(() => {\r\n        barTwoStyle.backgroundColor = PRIM_COL\r\n      },i * speed)\r\n      }\r\n    }else if(animations[i][0] === 'noswap'){\r\n      const barOneStyle = arrayBars[animations[i][1]].style\r\n      const barTwoStyle = arrayBars[animations[i][2]].style\r\n      setTimeout(() => {\r\n        barOneStyle.backgroundColor = PRIM_COL\r\n        barTwoStyle.backgroundColor = PRIM_COL\r\n      },i * speed)\r\n    }\r\n  }\r\n  const TIME = speed * animations.length/2 + 1500\r\n  setTimeout(()=>toggle(false),TIME)\r\n}\r\n\r\nexport default insertSort","import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport bubbleSort from './Visuals/bubble'\nimport selectSort from './Visuals/selection'\nimport insertSort from './Visuals/insertion'\n\n//primary color\nconst PRIM_COL = \"#008CBA\"\n\nfunction App() {\n  const [arr,setArr] = useState([1])\n  const [range,setRange] = useState(10)\n  const [speed,setSpeed] = useState(100)\n  const [disable,setDisable] = useState(false)\n\n  useEffect(()=>{\n    let sample = []\n    const arrayBars = document.getElementsByClassName('bar')\n    const N = arrayBars.length\n    for(let i = 0;i<N;i++){\n      arrayBars[i].style.backgroundColor=PRIM_COL\n    }\n    for(let i = 1;i<=range;i++){\n      sample.push(i)\n    }\n    sample.sort(()=>Math.random()-0.5)\n    setArr(sample)\n  },[range])\n\n  // to find highest value in array to get proportions \n  const max = arr.reduce((a, b)=>Math.max(a, b));\n\n  const toggle = (input) =>{\n    setDisable(input)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"slider-container\"> \n        <input disabled={disable} className=\"slider\" \n                type=\"range\" min=\"3\" max=\"300\" value={range} \n                onChange={({target})=>setRange(target.value)}>\n        </input>\n      </div>\n      <div className=\"button-container\">\n          <button disabled={disable} onClick={()=>bubbleSort(arr,max,speed,toggle)} className=\"sort-button\">Bubble Sort</button>\n          <button disabled={disable} onClick={()=>insertSort(arr,max,speed,toggle)} className=\"sort-button\">Insertion Sort</button>\n          <div className=\"range-display\">{range}\n            <input  disabled={disable} className=\"speed-slider\" \n                    style={{transform:\"rotate(180deg)\",width:\"50%\"}}  \n                    type=\"range\" min=\"0.3\" max=\"1000\" value={speed} \n                    onChange={({target})=>setSpeed(target.value)}>\n            </input>\n          </div>\n          <button disabled={disable} onClick={()=>selectSort(arr,max,speed,toggle)} className=\"sort-button\">Selection Sort</button>\n          <button disabled={disable} className=\"sort-button\">Merge Sort</button>\n      </div>\n      <div className=\"bar-container\" >\n        {arr.map((value, idx) => (\n            <div\n                className=\"bar\"\n                key={idx}\n                style={{\n                backgroundColor: PRIM_COL,\n                height: `${(window.innerHeight-130)*value/max}px`,\n                width:`${(window.innerWidth-40)/arr.length}px`,\n                }}\n            ></div>\n        ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}